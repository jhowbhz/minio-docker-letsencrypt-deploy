version: '3.7'

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    image: minio/minio:RELEASE.2021-06-14T01-29-23Z
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: ${MINIO_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_PASS:-minio123}
      MINIO_REGION_NAME: ${MINIO_REGION_NAME:-us-east-1}
      MINIO_BROWSER: ${MINIO_BROWSER:-on}
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio2:
    image: minio/minio:RELEASE.2021-06-14T01-29-23Z
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: ${MINIO_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_PASS:-minio123}
      MINIO_REGION_NAME: ${MINIO_REGION_NAME:-us-east-1}
      MINIO_BROWSER: ${MINIO_BROWSER:-on}
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio3:
    image: minio/minio:RELEASE.2021-06-14T01-29-23Z
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: ${MINIO_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_PASS:-minio123}
      MINIO_REGION_NAME: ${MINIO_REGION_NAME:-us-east-1}
      MINIO_BROWSER: ${MINIO_BROWSER:-on}
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio4:
    image: minio/minio:RELEASE.2021-06-14T01-29-23Z
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: ${MINIO_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_PASS:-minio123}
      MINIO_REGION_NAME: ${MINIO_REGION_NAME:-us-east-1}
      MINIO_BROWSER: ${MINIO_BROWSER:-on}
      MINIO_PROMETHEUS_AUTH_TYPE: "public"
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  nginx:
    image: staticfloat/nginx-certbot
    volumes:
      - ./nginx/conf.d:/etc/nginx/user.conf.d:ro
      - letsencrypt:/etc/letsencrypt
    environment:
      CERTBOT_EMAIL: ${CERTBOT_EMAIL}
      ENVSUBST_VARS: FQDN
      FQDN: ${FQDN}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
      - grafana
    restart: always

  prometheus:
    image: prom/prometheus:latest
    expose:
      - 9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    - --storage.tsdb.retention.time=48h
    volumes:
    - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    - prometheus_data:/prometheus
    restart: on-failure

  grafana:
    image: grafana/grafana:8.0.2
    expose:
    - 3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/dashboards/minio-overview.json
      - GF_SERVER_ROOT_URL=https://${FQDN}
    depends_on:
    - prometheus  
    restart: unless-stopped

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
  letsencrypt:
  grafana_data:
  prometheus_data:
